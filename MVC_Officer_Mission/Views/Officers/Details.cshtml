@model MVC_Officer_Mission.Models.Officer

@{
    ViewBag.Title = "ملف ضابط";
}

<h2>ملف ضابط</h2>

<div class="col-lg-12 col-sm-12 officerProfileCard">
    <div class="card hovercard">
        <div class="card-background">
            <img class="card-bkimg" alt="" src="~/Media/OfficersProfileImages/@MVC_Officer_Mission.Controllers.OfficersController.getOfficerProfileImage(Model)">
            <!-- http://lorempixel.com/850/280/people/9/ -->
        </div>
        <div class="useravatar">
            <a class="fancybox" data-fancybox-trigger="gallery" data-caption="@Model.FullName" href="~/Media/OfficersProfileImages/@MVC_Officer_Mission.Controllers.OfficersController.getOfficerProfileImage(Model)">
                <img class="officerProfileImagecard-bkimg" alt="" width="100" src="~/Media/OfficersProfileImages/@MVC_Officer_Mission.Controllers.OfficersController.getOfficerProfileImage(Model)" />
            </a>
        </div>
        <div class="card-info">
            <span class="card-title">@Model.FullName</span>
        </div>
    </div>
    <div class="btn-pref btn-group btn-group-justified btn-group-lg" role="group" aria-label="...">
        <div class="btn-group" role="group">
            <button type="button" id="stars" class="btn btn-primary" href="#tab1" data-toggle="tab">
                @*<span class="glyphicon glyphicon-star" aria-hidden="true"></span>*@
                <div class="hidden-xs">المعلومات الشخصية</div>
            </button>
        </div>
        <div class="btn-group" role="group">
            <button type="button" id="favorites" class="btn btn-default" href="#tab2" data-toggle="tab">
                @*<span class="glyphicon glyphicon-heart" aria-hidden="true"></span>*@
                <div class="hidden-xs">المهام</div>
            </button>
        </div>
        <div class="btn-group" role="group">
            <button type="button" id="favorites" class="btn btn-default" href="#tab3" data-toggle="tab">
                @*<span class="glyphicon glyphicon-heart" aria-hidden="true"></span>*@
                <div class="hidden-xs">الدورات</div>
            </button>
        </div>
    </div>
    <div class="well">
        <div class="tab-content">
            <div class="tab-pane fade in active" id="tab1">
                <div class="row">
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.MilitaryNumber)
                        <div class="col-md-4">
                            @* department null when officer without department *@
                            @( Model.MilitaryNumber != -1 ? Model.MilitaryNumber : 0)
                        </div>
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.Department.Name)
                        <div class="col-md-4">
                            @* department null when officer without department *@
                            @( Model.Department != null ? Model.Department.Name : "-")
                        </div>
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.FatherName)
                        <div class="col-md-4">
                            @(!String.IsNullOrEmpty(Model.FatherName) ? Model.FatherName : "-")
                        </div>
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.MotherFullName)
                        <div class="col-md-4">
                            @(!String.IsNullOrEmpty(Model.MotherFullName) ? Model.MotherFullName : "-")
                        </div>
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.BirthDate)
                        <div class="col-md-4">
                            @(Model.BirthDate != null && DateTime.Compare(Model.BirthDate, DateTime.Parse("1900-01-01")) != 0 ? Model.BirthDate.ToString("yyyy-MM-dd") : "-")
                        </div>
                    </div>
                    <div class="form-group col-md-4">

                        @Html.LabelFor(model => model.PhoneNumber)
                        <div class="col-md-4">
                            @(!String.IsNullOrEmpty(Model.PhoneNumber) ? Model.PhoneNumber : "-")
                        </div>
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.Address)
                        <div class="col-md-4">
                            @(!String.IsNullOrEmpty(Model.Address) ? Model.Address : "-")
                        </div>
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.Email)
                        <div class="col-md-4">
                            @(!String.IsNullOrEmpty(Model.Email) ? Model.Email : "-")
                        </div>
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.CollegeCertificates)
                        <div class="col-md-4">
                            @(!String.IsNullOrEmpty(Model.CollegeCertificates) ? Model.CollegeCertificates : "-")
                        </div>
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.IsHeadOfDepartment)
                        <div class="col-md-4">
                            @(Model.IsHeadOfDepartment ? "نعم" : "كلا")
                        </div>
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.Specifications.First().Name)
                        <div class="col-md-4">
                            @(!String.IsNullOrEmpty(MVC_Officer_Mission.Controllers.OfficersController.GetOfficerSpecificationsString(Model)) ? MVC_Officer_Mission.Controllers.OfficersController.GetOfficerSpecificationsString(Model) : "-")
                        </div>
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.ExternalTournaments)
                        <div class="col-md-4">
                            @if (Model.ExternalTournaments != null && Model.ExternalTournaments.Count > 0)
                            {
                                <div class="styledList">
                                    <ul>
                                        @foreach (var item in Model.ExternalTournaments)
                                        {
                                            <li>@item.Name</li>
                                        }
                                    </ul>
                                </div>

                            }
                            else
                            {
                                @Html.Raw(" - ")
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class="tab-pane fade in" id="tab2">
                <table class="table table-striped table-bordered dt-responsive nowrap dataTableMissions">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.Missions.First().Name)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Missions.First().From)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Missions.First().To)
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Missions.Where(m => !m.Istournament))
                        {
                            <tr>
                                <td>
                                    @item.Name
                                </td>
                                <td>
                                    @item.From.ToShortDateString()
                                </td>
                                <td>
                                    @item.To.ToShortDateString()
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

            </div>
            <div class="tab-pane fade in" id="tab3">
                <table class="table table-striped table-bordered dt-responsive nowrap dataTableTournaments">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayName("اسم الدورة")
                            </th>
                            <th>
                                @Html.DisplayName("مهامه في الدورة")
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Missions.First().From)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Missions.First().To)
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.OfficerRoleInMissions)
                        {
                            <tr>
                                <td>
                                    @item.Tournament.Missions.First().Name
                                </td>
                                <td>
                                    @item.Tournament.OfficersRolesInMission.First().OfficerRole


                                </td>
                                <td>
                                    @item.Tournament.Missions.First().From.ToShortDateString()
                                </td>
                                <td>
                                    @item.Tournament.Missions.First().To.ToShortDateString()
                                </td>
                                <td>
                                    @Html.ActionLink("تفاصيل الدورة", "AjaxOfficerTournamentDetails", "Missions", new { id = item.Tournament.Missions.First().Id }, new { @class = "tournamentDetailsBtn" })
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <p>
        @if (@Request.IsAuthenticated && User.IsInRole("admin"))
        {
            @Html.ActionLink("تعديل", "Edit", new { id = Model.Id }, new { @class = "action_link" }) @("|")
        }
        @Html.ActionLink("الرجوع إلى القائمة", "Index", "", new { @class = "action_link" })
    </p>
</div>


@section Styles{
    @Styles.Render("~/Content/DataTables")
    @Styles.Render("~/Content/fancybox")
}
@section Scripts{
    @Scripts.Render("~/bundles/DataTables")
    @Scripts.Render("~/bundles/fancybox")
    <script>
        $(document).ready(function () {
            console.log(DataTablesLang);
            $('.dataTableMissions').DataTable({
                "order": [],
                "language": DataTablesLang,
                "columnDefs": [{
                    "targets": 'no-sort',
                    "orderable": false,
                }]
            });

            $('.dataTableTournaments').DataTable({
                "order": [],
                "language": DataTablesLang,
                "columnDefs": [{
                    "targets": 'no-sort',
                    "orderable": false,
                }]
            });

            if ($(".fancybox").length > 0) {
                $(".fancybox").fancybox({
                    openEffect: 'elastic',
                    closeEffect: 'elastic',

                    helpers: {
                        title: {
                            type: 'iframe'
                        }
                    }
                })
            }

            $('.tournamentDetailsBtn').fancybox({
                autoSize: true,
                type: 'ajax'
            });
        });


    </script>
}
